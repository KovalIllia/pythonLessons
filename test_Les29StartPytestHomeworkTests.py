"""–ó–∞–¥–∞—á–∞ 1: –†–æ–±–æ—Ç–∞ –∑ —Ç–∏–º—á–∞—Å–æ–≤–∏–º —Ñ–∞–π–ª–æ–º
–ú–µ—Ç–∞: –ù–∞–≤—á–∏—Ç–∏—Å—å —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —ñ –∑–Ω–∏—â—É–≤–∞—Ç–∏ —Ñ–∞–π–ª —É —Ç–µ—Å—Ç—ñ.

üìå –£–º–æ–≤–∞:

–°—Ç–≤–æ—Ä–∏ —Ñ—ñ–∫—Å—Ç—É—Ä—É temporary_file, —è–∫–∞:

–°—Ç–≤–æ—Ä—é—î —Ñ–∞–π–ª temp.txt –∑ —è–∫–∏–º–æ—Å—å –≤–º—ñ—Å—Ç–æ–º ("hello world").

–ß–µ—Ä–µ–∑ yield –ø–µ—Ä–µ–¥–∞—î —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É.

–ü—ñ—Å–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–µ—Å—Ç—É ‚Äî –≤–∏–¥–∞–ª—è—î —Ñ–∞–π–ª.

üß™ –¢–µ—Å—Ç: –ø–µ—Ä–µ–≤—ñ—Ä, —â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î —ñ –º—ñ—Å—Ç–∏—Ç—å "hello world"."""

import pytest
import os
#
@pytest.fixture()
def temporary_file():
    new_value = "hello world"
    fw=open('doc/Les29.txt','a')
    fw.write(f"{new_value}\n")#update doc
    fw.close()#close doc
    yield 'doc/Les29.txt'
    os.remove('doc/Les29.txt')

# def writeNewValue():
#     new_value = "hello world"
#     fs = open('doc/file1.txt', 'a')  # create doc
#     fs.write(f"{new_value}\n")#update doc
#     fs.close()#close doc

def test_file_content(temporary_file):
    assert os.path.exists(temporary_file)
    fa = open(temporary_file, 'r')
    text = fa.read()
    assert "hello world" in text
    fa.close()
    print(text)


"""‚úÖ –ó–∞–¥–∞—á–∞ 2: –°–∏–º—É–ª—è—Ü—ñ—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ API
–ú–µ—Ç–∞: –ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏—Å—è –≤ —ñ–º—ñ—Ç–∞—Ü—ñ—ó –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ —Ä–µ—Å—É—Ä—Å—É.

üìå –£–º–æ–≤–∞:

–°—Ç–≤–æ—Ä–∏ —Ñ—ñ–∫—Å—Ç—É—Ä—É api_client, —è–∫–∞:

–í–∏–≤–æ–¥–∏—Ç—å "–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ API..." (setup).

–ü–æ–≤–µ—Ä—Ç–∞—î –æ–±‚Äô—î–∫—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Å–ª–æ–≤–Ω–∏–∫) —á–µ—Ä–µ–∑ yield.

–ü—ñ—Å–ª—è —Ç–µ—Å—Ç—É –≤–∏–≤–æ–¥–∏—Ç—å "–í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ API..." (teardown).

üß™ –¢–µ—Å—Ç: –ø–µ—Ä–µ–≤—ñ—Ä, —â–æ –≤ –æ–±'—î–∫—Ç—ñ —î –∫–ª—é—á "status" —ñ–∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º "connected"."""


@pytest.fixture()
def api_client():
    print("–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ API...")
    user_data = {"status":"connected","user":"admin"}
    yield user_data
    print("–í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ API...")

def test_newObject(api_client):
    assert api_client["status"]=="connected"
    print(api_client)



"""‚úÖ –ó–∞–¥–∞—á–∞ 3: –¢–∏–º—á–∞—Å–æ–≤–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
–ú–µ—Ç–∞: –í–∏–≤—á–∏—Ç–∏ —è–∫ –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏ —Ä–µ—Å—É—Ä—Å, —è–∫–∏–π –∑–º—ñ–Ω—é—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É.

üìå –£–º–æ–≤–∞:

–°—Ç–≤–æ—Ä–∏ —Ñ—ñ–∫—Å—Ç—É—Ä—É user_list, —è–∫–∞:

–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —Å–ø–∏—Å–æ–∫ –∑ –æ–¥–Ω–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: ["admin"].

–ü–æ–≤–µ—Ä—Ç–∞—î —Ü–µ–π —Å–ø–∏—Å–æ–∫ —É —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ yield.

üß™ –¢–µ—Å—Ç: –¥–æ–¥–∞–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ "test_user" –¥–æ —Å–ø–∏—Å–∫—É —ñ –ø–µ—Ä–µ–≤—ñ—Ä, —â–æ —Ç–µ–ø–µ—Ä —É –Ω—å–æ–º—É –¥–≤–∞ –µ–ª–µ–º–µ–Ω—Ç–∏."""


@pytest.fixture()
def user_list():
    new_userlist=["admin"]
    yield new_userlist

def test_addingNewUser(user_list):
    user_list.append("test_user")
    assert len(user_list)==2
    assert "test_user" in user_list
