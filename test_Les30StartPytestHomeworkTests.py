"""–ó–∞–¥–∞—á–∞ 1: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–î –Ω–∞ —Ä—ñ–≤–Ω—ñ –º–æ–¥—É–ª—è
üìå –£–º–æ–≤–∞:

–°—Ç–≤–æ—Ä–∏ —Ñ—ñ–∫—Å—Ç—É—Ä—É db_connection –∑ scope="module", —è–∫–∞:

–≤–∏–≤–æ–¥–∏—Ç—å –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î –Ω–∞ –ø–æ—á–∞—Ç–∫—É,

–ø–æ–≤–µ—Ä—Ç–∞—î —Ñ—ñ–∫—Ç–∏–≤–Ω–µ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Å–ª–æ–≤–Ω–∏–∫),

–ø—ñ—Å–ª—è —Ç–µ—Å—Ç—ñ–≤ ‚Äî –≤–∏–≤–æ–¥–∏—Ç—å –í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ –ë–î.

üß™ –ù–∞–ø–∏—à–∏ –¥–≤–∞ —Ç–µ—Å—Ç–∏, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å —Ü—é —Ñ—ñ–∫—Å—Ç—É—Ä—É, —ñ –ø–µ—Ä–µ–≤—ñ—Ä, —â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑'—è–≤–ª—è—î—Ç—å—Å—è –ª–∏—à–µ –æ–¥–∏–Ω —Ä–∞–∑."""
from contextlib import nullcontext

import pytest

@pytest.fixture(scope="module")
def db_connection():
    print("–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î...")
    dict_connection = {"connection_to_bd":True}
    yield dict_connection
    print("–í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—ñ–¥ –ë–î...")

def test_firstConnection(db_connection):
    print(f"ID –æ–±'—î–∫—Ç–∞ db_connection: {id(db_connection)}")
    db_connection["user"] = "admin"
    assert db_connection["user"] == "admin"

def test_secondConnection(db_connection):
    print(f"ID –æ–±'—î–∫—Ç–∞ db_connection: {id(db_connection)}")
    assert db_connection["user"] == "admin"



"""‚úÖ –ó–∞–¥–∞—á–∞ 2: –¢–∏–º—á–∞—Å–æ–≤—ñ –æ–±'—î–∫—Ç–∏ –∑ –∫–æ—Ä–æ—Ç–∫–∏–º –∂–∏—Ç—Ç—è–º
üìå –£–º–æ–≤–∞:

–°—Ç–≤–æ—Ä–∏ —Ñ—ñ–∫—Å—Ç—É—Ä—É create_temp_user –∑ scope="function", —è–∫–∞:

–≤–∏–≤–æ–¥–∏—Ç—å –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –ø–æ—á–∞—Ç–∫—É,

–ø–æ–≤–µ—Ä—Ç–∞—î —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞,

–ø—ñ—Å–ª—è —Ç–µ—Å—Ç—É ‚Äî –≤–∏–≤–æ–¥–∏—Ç—å –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

üß™ –°—Ç–≤–æ—Ä–∏ 3 —Ç–µ—Å—Ç–∏, —è–∫—ñ –≤–∏–∫–ª–∏–∫–∞—é—Ç—å —Ü—é —Ñ—ñ–∫—Å—Ç—É—Ä—É. –ü–µ—Ä–µ–≤—ñ—Ä, —â–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–∫—Ä–µ–º–æ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç—É."""

@pytest.fixture(scope="function")
def create_temp_user():
    print(f"creating new user!")
    user_name = "test_user"
    print(user_name)
    yield user_name
    print(f"deleting created user!")
    print(user_name)

def test_checking_1(create_temp_user):
    assert create_temp_user != None
    print(id(create_temp_user))
    print(create_temp_user)

def test_checking_2(create_temp_user):
    assert create_temp_user != None
    print(id(create_temp_user))
    print(create_temp_user)

def test_checking_3(create_temp_user):
    assert create_temp_user != None
    print(id(create_temp_user))
    print(create_temp_user)







"""‚úÖ –ó–∞–¥–∞—á–∞ 3: –ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è scope="module" —Ç–∞ scope="function"
üìå –£–º–æ–≤–∞:

–°—Ç–≤–æ—Ä–∏:

—Ñ—ñ–∫—Å—Ç—É—Ä—É server –∑—ñ scope="module" ‚Äî —ñ–º—ñ—Ç—É—î –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞,

—Ñ—ñ–∫—Å—Ç—É—Ä—É session –∑—ñ scope="function" ‚Äî —ñ–º—ñ—Ç—É—î –ø–æ—á–∞—Ç–æ–∫ —Å–µ—Å—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

üß™ –ù–∞–ø–∏—à–∏ 2 —Ç–µ—Å—Ç–∏, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –æ–±–∏–¥–≤—ñ —Ñ—ñ–∫—Å—Ç—É—Ä–∏, —ñ –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ:

–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑,

–°–µ—Å—ñ—è —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —â–æ—Ä–∞–∑—É –Ω–∞–Ω–æ–≤–æ."""

@pytest.fixture(scope="module")
def server():
    print("Starting the server")
    create_connection={"connection":"success"}
    yield create_connection
    print("Closed the server")

@pytest.fixture(scope="function")
def session():
    print("Starting the session")
    create_session = {"session": "created"}
    yield create_session
    print("Closed the session")

def test_firstChecking(server,session):
    print(id(session))
    assert server["connection"]=="success"
    # assert session!=None

def test_secondChecking(server,session):
    print(id(session))
    assert session["session"]=="created"
    # assert server!=None